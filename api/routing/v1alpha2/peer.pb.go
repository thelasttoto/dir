// Copyright AGNTCY Contributors (https://github.com/agntcy)
// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: routing/v1alpha2/peer.proto

package routingv1alpha2

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PeerConnectionType int32

const (
	// Sender does not have a connection to peer, and no extra information (default)
	PeerConnectionType_PEER_CONNECTION_TYPE_NOT_CONNECTED PeerConnectionType = 0
	// Sender has a live connection to peer.
	PeerConnectionType_PEER_CONNECTION_TYPE_CONNECTED PeerConnectionType = 1
	// Sender recently connected to peer.
	PeerConnectionType_PEER_CONNECTION_TYPE_CAN_CONNECT PeerConnectionType = 2
	// Sender made strong effort to connect to peer repeatedly but failed.
	PeerConnectionType_PEER_CONNECTION_TYPE_CANNOT_CONNECT PeerConnectionType = 3
)

// Enum value maps for PeerConnectionType.
var (
	PeerConnectionType_name = map[int32]string{
		0: "PEER_CONNECTION_TYPE_NOT_CONNECTED",
		1: "PEER_CONNECTION_TYPE_CONNECTED",
		2: "PEER_CONNECTION_TYPE_CAN_CONNECT",
		3: "PEER_CONNECTION_TYPE_CANNOT_CONNECT",
	}
	PeerConnectionType_value = map[string]int32{
		"PEER_CONNECTION_TYPE_NOT_CONNECTED":  0,
		"PEER_CONNECTION_TYPE_CONNECTED":      1,
		"PEER_CONNECTION_TYPE_CAN_CONNECT":    2,
		"PEER_CONNECTION_TYPE_CANNOT_CONNECT": 3,
	}
)

func (x PeerConnectionType) Enum() *PeerConnectionType {
	p := new(PeerConnectionType)
	*p = x
	return p
}

func (x PeerConnectionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PeerConnectionType) Descriptor() protoreflect.EnumDescriptor {
	return file_routing_v1alpha2_peer_proto_enumTypes[0].Descriptor()
}

func (PeerConnectionType) Type() protoreflect.EnumType {
	return &file_routing_v1alpha2_peer_proto_enumTypes[0]
}

func (x PeerConnectionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PeerConnectionType.Descriptor instead.
func (PeerConnectionType) EnumDescriptor() ([]byte, []int) {
	return file_routing_v1alpha2_peer_proto_rawDescGZIP(), []int{0}
}

type Peer struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of a given peer, typically described by a protocol.
	// For example:
	//   - SPIFFE:   "spiffe://example.org/service/foo"
	//   - JWT:      "jwt:sub=alice,iss=https://issuer.example.com"
	//   - Tor:      "onion:abcdefghijklmno.onion"
	//   - DID:      "did:example:123456789abcdefghi"
	//   - IPFS:     "ipfs:QmYwAPJzv5CZsnAzt8auVZRn2E6sD1c4x8pN5o6d5cW4D5"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Multiaddrs for a given peer.
	// For example:
	// - "/ip4/127.0.0.1/tcp/4001"
	// - "/ip6/::1/tcp/4001"
	// - "/dns4/example.com/tcp/443/https"
	Addrs []string `protobuf:"bytes,2,rep,name=addrs,proto3" json:"addrs,omitempty"`
	// Additional metadata about the peer.
	Annotations map[string]string `protobuf:"bytes,3,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Used to signal the sender's connection capabilities to the peer.
	Connection    PeerConnectionType `protobuf:"varint,4,opt,name=connection,proto3,enum=routing.v1alpha2.PeerConnectionType" json:"connection,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Peer) Reset() {
	*x = Peer{}
	mi := &file_routing_v1alpha2_peer_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Peer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Peer) ProtoMessage() {}

func (x *Peer) ProtoReflect() protoreflect.Message {
	mi := &file_routing_v1alpha2_peer_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Peer.ProtoReflect.Descriptor instead.
func (*Peer) Descriptor() ([]byte, []int) {
	return file_routing_v1alpha2_peer_proto_rawDescGZIP(), []int{0}
}

func (x *Peer) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Peer) GetAddrs() []string {
	if x != nil {
		return x.Addrs
	}
	return nil
}

func (x *Peer) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *Peer) GetConnection() PeerConnectionType {
	if x != nil {
		return x.Connection
	}
	return PeerConnectionType_PEER_CONNECTION_TYPE_NOT_CONNECTED
}

var File_routing_v1alpha2_peer_proto protoreflect.FileDescriptor

var file_routing_v1alpha2_peer_proto_rawDesc = string([]byte{
	0x0a, 0x1b, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x32, 0x2f, 0x70, 0x65, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x72,
	0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x22,
	0xfd, 0x01, 0x0a, 0x04, 0x50, 0x65, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x64, 0x64, 0x72,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x61, 0x64, 0x64, 0x72, 0x73, 0x12, 0x49,
	0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x2e, 0x41, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x44, 0x0a, 0x0a, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e,
	0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32,
	0x2e, 0x50, 0x65, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a,
	0x3e, 0x0a, 0x10, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x2a,
	0xaf, 0x01, 0x0a, 0x12, 0x50, 0x65, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x22, 0x50, 0x45, 0x45, 0x52, 0x5f, 0x43,
	0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e,
	0x4f, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x00, 0x12, 0x22,
	0x0a, 0x1e, 0x50, 0x45, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x45, 0x44,
	0x10, 0x01, 0x12, 0x24, 0x0a, 0x20, 0x50, 0x45, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45,
	0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x41, 0x4e, 0x5f, 0x43,
	0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x10, 0x02, 0x12, 0x27, 0x0a, 0x23, 0x50, 0x45, 0x45, 0x52,
	0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x43, 0x41, 0x4e, 0x4e, 0x4f, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x10,
	0x03, 0x42, 0xbe, 0x01, 0x0a, 0x14, 0x63, 0x6f, 0x6d, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e,
	0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x42, 0x09, 0x50, 0x65, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x67, 0x6e, 0x74, 0x63, 0x79, 0x2f, 0x64, 0x69, 0x72, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x32, 0x3b, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x32, 0xa2, 0x02, 0x03, 0x52, 0x58, 0x58, 0xaa, 0x02, 0x10, 0x52, 0x6f, 0x75, 0x74,
	0x69, 0x6e, 0x67, 0x2e, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0xca, 0x02, 0x10, 0x52,
	0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0xe2,
	0x02, 0x1c, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x32, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02,
	0x11, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x3a, 0x3a, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_routing_v1alpha2_peer_proto_rawDescOnce sync.Once
	file_routing_v1alpha2_peer_proto_rawDescData []byte
)

func file_routing_v1alpha2_peer_proto_rawDescGZIP() []byte {
	file_routing_v1alpha2_peer_proto_rawDescOnce.Do(func() {
		file_routing_v1alpha2_peer_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_routing_v1alpha2_peer_proto_rawDesc), len(file_routing_v1alpha2_peer_proto_rawDesc)))
	})
	return file_routing_v1alpha2_peer_proto_rawDescData
}

var file_routing_v1alpha2_peer_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_routing_v1alpha2_peer_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_routing_v1alpha2_peer_proto_goTypes = []any{
	(PeerConnectionType)(0), // 0: routing.v1alpha2.PeerConnectionType
	(*Peer)(nil),            // 1: routing.v1alpha2.Peer
	nil,                     // 2: routing.v1alpha2.Peer.AnnotationsEntry
}
var file_routing_v1alpha2_peer_proto_depIdxs = []int32{
	2, // 0: routing.v1alpha2.Peer.annotations:type_name -> routing.v1alpha2.Peer.AnnotationsEntry
	0, // 1: routing.v1alpha2.Peer.connection:type_name -> routing.v1alpha2.PeerConnectionType
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_routing_v1alpha2_peer_proto_init() }
func file_routing_v1alpha2_peer_proto_init() {
	if File_routing_v1alpha2_peer_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_routing_v1alpha2_peer_proto_rawDesc), len(file_routing_v1alpha2_peer_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_routing_v1alpha2_peer_proto_goTypes,
		DependencyIndexes: file_routing_v1alpha2_peer_proto_depIdxs,
		EnumInfos:         file_routing_v1alpha2_peer_proto_enumTypes,
		MessageInfos:      file_routing_v1alpha2_peer_proto_msgTypes,
	}.Build()
	File_routing_v1alpha2_peer_proto = out.File
	file_routing_v1alpha2_peer_proto_goTypes = nil
	file_routing_v1alpha2_peer_proto_depIdxs = nil
}
